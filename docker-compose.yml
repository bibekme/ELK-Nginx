version: "3"
services:
  app:
    build: ./app
    container_name: app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - nginx
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    container_name: nginx
    restart: always
  elasticsearch:
    image: elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    env_file: .env
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - elastic
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  kibana:
    image: kibana:${ELK_VERSION}
    container_name: kibana
    env_file: .env
    ports:
      - 5601:5601
    networks:
      - elastic
    depends_on:
      - elasticsearch
  logstash:
    image: logstash:${ELK_VERSION}
    container_name: logstash
    env_file: .env
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5044:5044"
      - "9600:9600"
    networks:
      - elastic
    volumes:
      - ./logstash-config:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    container_name: filebeat
    env_file: .env
    user: root
    command: ["filebeat", "-e", "--strict.perms=false"]
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./nginx/logs:/nginx-logs
    networks:
      - elastic
    depends_on:
      - logstash
networks:
  elastic:
    driver: bridge
volumes:
  elasticsearch-data:
    driver: local
