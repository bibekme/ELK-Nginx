version: "2"
services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: app
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - "8000:8000"

  nginx:
    image: nginx
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    restart: always

  elasticsearch:
    image: elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    env_file: .env
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms750m -Xmx750m
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 30s
        timeout: 30s
        retries: 3
      
  kibana:
    image: kibana:${ELK_VERSION}
    container_name: kibana
    env_file: .env
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    container_name: filebeat
    env_file: .env
    user: root
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      kibana:
        condition: service_healthy
      elasticsearch:
        condition: service_started
volumes:
  esdata:
